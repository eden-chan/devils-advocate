import * as XState from 'xstate';
type AnyStateNode = XState.StateNode<any, any, any, any, any, any>;
export interface StateSchema extends Record<string, StateSchema> {
}
export type IntrospectMachineResult = ReturnType<typeof introspectMachine>;
export declare const introspectMachine: (machine: AnyStateNode) => {
    states: {
        id: string;
        sources: Set<string>;
    }[];
    stateSchema: StateSchema;
    guards: {
        lines: {
            name: string;
            required: boolean;
            events: string[];
        }[];
        required: boolean;
    };
    actions: {
        lines: {
            name: string;
            required: boolean;
            events: string[];
        }[];
        required: boolean;
    };
    services: {
        lines: {
            name: string;
            required: boolean;
            events: string[];
        }[];
        required: boolean;
    };
    delays: {
        lines: {
            name: string;
            required: boolean;
            events: string[];
        }[];
        required: boolean;
    };
    serviceSrcToIdMap: Map<string, Set<string>>;
};
export {};
